/*
    input is pairs - p
    assume each pair has properties of start and finish
*/
// sort by start time - O(nlogn)
sortedPairs = mergeSort(p)

ans = [sortedPairs[0]]
// O(n^2)
for pair in sortedPairs[1:]:
    // look at the top element - skip the iteration if we do not increase overall time
    if ans[len(ans) - 1].finish < pair.finish:
        continue
    /*
        we are greedily finding the earliest link that can connect with pair, removing any redundant links we find

        O(n)
    */
    deepestLink = -1
    i = len(ans) - 1
    while i > -1:
        link = ans[i] 
        // the link before this is the deepest link - no possible connection to this link
        if pair.start > link.finish:
            break
        // remove redudant links (because our pair is sorted by start time, our start time will be later and thus we can throw away redudant links)
        if pair.start < link.finish:
            // O(1) operation, popping from array
            deepestLink = link
            ans.pop(i)
        i += 1
    // undo the delete of deepestLink - our pair cannot connect to anything before deepestLink
    ans.append(deepestLink)
    // O(1) operation
    ans.append(pair)
// number of sparse and sufficient
return len(ans)


2a.
A = [0,0.4)
B = [0.3, 0.7)
C = [0.6,1)

For the friends answer, we would choose A, skip B because it overalps with A's interval, then choose C because it does not overlap
However, we can have a sparse set of A,B,C if we go to the restaurant at times 0.2, 0.5, 0.9
0.2, we only see waiter A
0.5 we only see waiter B
0.9 we only see waiter C
Thus we can have a sparse set of size 3


2b.
Prove that if we have a sparse set V of size k, all sufficient sets will need to be size greater than or equal to k

Assume for contradiction that sufficient set S has less than k elements. We know that sparse set V crosses all intervals exactly once. The number of intervals
that sparse set V contains is j. j must be at least k because each slash can slash through 1 or more waiters (and there are k slashes). 
If S is less than k elements, assume that S has h elements, then we establish that, h < k <= j. If the span of all h waiters is less than the 
number of j waiters, then 


2c.
prove that if there exists a sufficient set of size k, then all sparse sets must be at most size k

Assume for contradiction that sparse set V has a size greater than k such that each visit crosses all intervals in sufficient set S exactly once.
Because V has a size greater than k, we have m extra visits. However, because we designed V such that each visits all intervals exactly once, it is impossible
that we have m extra visits because then we would have visited an already visited interval. Thus, sparse set V must be at most size k

2e. (proof)
